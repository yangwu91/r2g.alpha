# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Build and Upload Python Package to PyPI

on: [push]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine flake8
    - name: Lint with flake8
      run: |
        flake8 . --count --exit-zero --max-line-length=120 --statistics
    - name: Build and publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TESTPYPI_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
#        twine upload --repository-url https://test.pypi.org/legacy/ dist/*
    - name: Build and publish to custom Conda channel
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: |
        export VERSION=$(grep -o "[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}" src/r2g/__init__.py)
        sed -i "s/version = \"[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\"/version =\"${VERSION}\"/" conda-recipes/meta.yaml
        echo "::set-env name=VERSION::$VERSION"
        export SHA=$(sha256sum dist/r2g-${VERSION}.tar.gz |cut -f 1 -d " ")
        export SHA="62b0b23e15fb26fca3e33e6b895d4b758b393f5cd6b99ad54c72db9531022b01"
        sed -i "s/sha256: .\+/sha256: $SHA/" conda-recipes/meta.yaml
        cat conda-recipes/meta.yaml
        wget -qO miniconda3.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        bash miniconda3.sh -bfp /opt/miniconda3
        /opt/miniconda3/bin/conda config --add channels defaults
        /opt/miniconda3/bin/conda config --add channels bioconda
        /opt/miniconda3/bin/conda config --add channels conda-forge
        /opt/miniconda3/bin/conda update -y --all
        /opt/miniconda3/bin/conda install anaconda-client conda-build conda-verify
        /opt/miniconda3/bin/conda build -c conda-forge -c bioconda --output-folder conda-recipes conda-recipes
        /opt/miniconda3/bin/anaconda upload -p r2g.dev -u yangwu91 --label main -v $VERSION $(ls conda-recipes/noarch/r2g*.tar.bz2)
        /opt/miniconda3/bin/anaconda logout
    - name: Prepare for Docker build
      run : |
        cd docker
        make docker
        cd ..
    - name: Docker build and push
      uses: docker/build-push-action@v1.1.0
      with:
        username: yangwu91
        password: ${{ secrets.DOCKER_TOKEN }}
        repository: r2g.docker.test
        tags: latest,${{ env.VERSION }}
        path: docker
        dockerfile: Dockerfile
        push: true
