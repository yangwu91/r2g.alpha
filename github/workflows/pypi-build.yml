# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Build and Upload Python Package to PyPI

on: [push]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine flake8
    - name: Lint with flake8
      run: |
        flake8 . --count --exit-zero --max-line-length=120 --statistics
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TESTPYPI_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
#        twine upload --repository-url https://test.pypi.org/legacy/ dist/*
    - name: Publish to my Conda Channel
      run: |
        export VERSION=$(grep -o "[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}" src/r2g/__init__.py)
        sed -i "s/version = \"[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\"/version =\"${VERSION}\"/" conda-recipes/meta.yaml
        export SHA=$(sha256sum dist/r2g-${VERSION}.tar.gz |cut -f 1 -d " ")
        sed -i "s/sha256: .\+/sha256: $SHA/" conda-recipes/meta.yaml
        conda build -c conda-forge -c bioconda --output-folder conda-recipes conda-recipes
        export ANACONDA_API_TOKEN=${{ secrets.ANACONDA_TOKEN }}
        anaconda upload --label main conda-recipes/linux-64/r2g-${VERSION}.tar.bz2
        
