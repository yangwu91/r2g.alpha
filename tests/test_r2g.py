#!/usr/bin/env python

import unittest
from r2g import main
from r2g.online import blast

aae_rps7 =""">AAEL009496-RA_RPS7
CCCCCATCGGACAGCTGTCAGTAAACGCAAACTCGCTCGAACTTCCGCCCAACTGTCTGT
GGTCGGCTGTTCTGTCAAAATTTGCTCCTTTCTCGCTCTTTTTCCGGGCATCTTTGATGT
GCGAGTGAACACATTTCACTGTGAACGTAAAATAAATTCGCTATGGTTTTCGGATCAAAG
GTGATCAAGGCCGGTGGCGCCGAGCCTGATGCTTTCGAGGGACAAATCGGCCAGGCTATC
CTGGAGTTGGAGATGAACTCGGACCTGAAGCCACAGCTGCGTGATCTGTACATCACCCGC
GCTCGTGAGATCGAGTTCAACAGCAAGAAGGCTATCGTGATCTACGTCCCGGTGCCCAAG
CAGAAGGCCTTCCAGAAGGTCCAAACCCGGCTGGTCCGTGAGCTGGAGAAGAAGTTCTCC
GGCAAGCACGTCGTGTTCATCGGCGAGCGTCGCATCCTGCCCAAGCCCCAGCGCGGCCGC
CGTGACCCCAACAAGCAGAAGCGTCCACGATCCCGCACTCTGACCGCCGTCTACGATGCC
ATCCTGGAGGATCTGGTCTTCCCGGCTGAAGTCGTCGGCAAGCGTATGCGCGTCAAGCTG
GACGGATCGCAGCTGATCAAGGTGCACCTGGACAAGAACCAGCAGACCACCATTGAACAC
AAGGTCGACACCTTCACGTCAGTGTACAAGAAGCTGACCGGACGTGACGTTACGTTCGAA
TTCCCGGAGCCCTACCTATAAACTATTACAACCAATAGTTGCTAGAAATTAATCTAATAA
GTGAGCGCGCGCGGAAGGTTGGTAAAACTGAAGAAAAAAAACTATGTACGGAACTAGGGT
GTGCATAAATCATCTTTGTGCTGCATCGTTCGCCCCCTTTAAATAAAGACCCTCACCAAA
CGGAGGGACAAGAACAGTTTACAGGTGTATTGGAAAACAATTTCTAA"""
args_dict = {
    'verbose': False,
    'outdir': 'RPS7',
    'sra': 'SRX5138669',
    'query': None,
    'program': 'blastn',
    'max_num_seq': 1000,
    'evalue': 0.001,
    'cut': '50,20',
    'retry': 5,
    'CPU': 8,
    'max_memory': '5G',
    'min_contig_length': 150,
    'KMER_SIZE': 25,
    'full_cleanup': False,
    'trim': False,
    'stage': 'butterfly'
}


class TestR2g(unittest.TestCase):

    def test_main_parse_argument(self):
        online_raw_args = "-o RPS7 -s SRX5138669 -q aae_RPS7.fa --cut 50,20 -r 5 --CPU 8".split()
        globals()['args_dict']['query'] = "aae_RPS7.fa"
        self.assertEqual(main.parse_arguments(online_raw_args, "0.1.0"), globals()['args_dict'])

    def test_blast_query(self):
        globals()['args_dict']['query'] = globals()['aae_rps7']
        result = blast.query(globals()['args_dict'])
        self.assertTrue((result[0] == "Undefined") and ((18860436, 18860436) in result[1]["SRR8326954"]))


if __name__ == "__main__":
    unittest.main(verbosity=2)
